[[breaking-changes-7.0]]
== Breaking changes in 7.0
++++
<titleabbrev>7.0</titleabbrev>
++++

This section discusses the changes that you need to be aware of when migrating
your application to Kibana 7.0.


* <<breaking_70_api_changes>>
* <<breaking_70_browser_support_changes>>
* <<breaking_70_ems_changes>>
* <<breaking_70_packaging_changes>>
* <<breaking_70_setting_changes>>
* <<breaking_70_advanced_settings_changes>>
* <<breaking_70_UI_changes>>



[float]
[[breaking_70_api_changes]]
=== API changes

[float]
==== Deprecated API `/shorten` has been removed
*Details:* The `/shorten` API has been deprecated since 6.5, when it was replaced by the `/api/shorten_url` API.

*Impact:* The '/shorten' API has been removed. Use the '/api/shorten_url' API instead.

[float]
[[breaking-changes-7.0-saved-objects]]
==== Saved object structure change
*Details:* Saved objects no longer contain ids of other saved objects under `attributes`. They have been moved under `references` with a named reference in `attributes`.

Example structure before:
[source,js]
--------------------------------------------------
{
  ...
  "attributes": {
    ...
    "panelsJSON": [{
      ...
      "type": "visualization",
      "id": "dbf71bb0-ffad-11e8-acfd-d359b3d9069"
    }]
  }
}
--------------------------------------------------


Example structure after:
[source,js]
--------------------------------------------------
{
  ...
  "attributes": {
    ...
    "panelsJSON": [{
      ...
      "panelRefName": "panel_0"
    }]
  },
  "references": [{
    "name": "panel_0",
    "type": "visualization",
    "id": "dbf71bb0-ffad-11e8-acfd-d359b3d9069"
  }]
}
--------------------------------------------------


*Impact:* Users who query directly for ids will have to use the new `hasReference` in the find API. Users who save ids within attributes will have to move them into the `references` attribute and have a named reference to it.

[float]
[[breaking_70_browser_support_changes]]
=== Browser support changes

[float]
==== Removed support for using PhantomJS browser for screenshots in Reporting
*Details:* Since the first release of Kibana Reporting, PhantomJS was used as
the headless browser to capture screenshots of Kibana dashboards and
visualizations. In that short time, Chromium has started offering a new
headless browser library and the PhantomJS maintainers abandoned their project.
We started planning for a transition in 6.5.0, when we made Chromium the
default option, but allowed users to continue using Phantom with the
`xpack.reporting.capture.browser.type: phantom` setting. In 7.0, that setting
will still exist for compatibility, but the only valid option will be
`chromium`.

*Impact:* Before upgrading to 7.0, if you have `xpack.reporting.capture.browser.type`
set in kibana.yml, make sure it is set to `chromium`.

[NOTE]
============
Reporting 7.0 uses a version of the Chromium headless browser that RHEL 6,
CentOS 6.x, and other old versions of Linux derived from RHEL 6. This change
effectively removes RHEL 6 OS server support from Kibana Reporting. Users with
RHEL 6 must upgrade to RHEL 7 to use Kibana Reporting starting with version
7.0.0 of the Elastic stack.
============


[float]
==== Legacy browsers (namely IE11) will see a security warning message whenever they load Kibana
*Details:* Kibana now has a Content Security Policy, but it's only effective if browsers enforce it, and since older
browsers like Internet Explorer 11 do not support CSP, we show them a warning message whenever they load Kibana.

*Impact:* Nothing needs to be done necessarily, but if you don't need to support legacy browsers like IE11, we recommend
that you set `csp.strict: true` in your kibana.yml to block access to those browsers entirely. If your organization requires
users to use IE11, you might like to disable the warning entirely with `csp.warnLegacyBrowsers: false` in your kibana.yml.


[float]
[[breaking_70_ems_changes]]
=== Elastic Maps Service changes

[float]
==== Removed overseas territories from France Departments vector layer

*Details:* Overseas territories in the France Departments vector layer have 
been removed. These territories have no ISO 3166-2 or INSEE codes to join to 
{es} data.

*Impact:* Region Map, Vega, and Maps plugin visualizations using the France 
Departments layer will not show overseas territories. 

[float]
==== USA Zip Codes vector layer updated with latest US Census data

*Details:* The USA Zip Codes layer has been updated based on the 
https://www.census.gov/geo/reference/zctas.html[2018 Zip Code Tabulation 
Areas (ZCTAs)] distributed by the US Census Bureau. ZCTA boundaries have been 
generalized from the source data for visualization and locations are approximate.

*Impact:* Region Map, Vega, and Maps plugin visualizations using the USA Zip 
Codes layer will appear differently. ZCTA boundaries have changed dramatically 
in some areas. Also, some zip codes have been deprecated and new ones have been added.

[float]
[[breaking_70_packaging_changes]]
=== Packaging changes

[float]
==== Removed support for running Kibana with a global Node.js installation
*Details:* Previous versions of Kibana would fallback to using a global installation of Node.js if the distribution included with Kibana was not found.
Kibana 7.0 will only use the Node.js distribution included in the package.

*Impact:* There is no expected impact unless Kibana is installed in a non-standard way.
[float]
[[breaking_70_advanced_settings_changes]]
=== Advanced settings changes


[float]
==== Advanced setting query:queryString:options no longer applies to filters
*Details:* In previous versions of Kibana the Advanced Setting `query:queryString:options` was applied to both queries
and custom filters using the `query_string` query. This could cause errors if a custom filter used options that
conflicted with the Advanced Setting. In 7.0 `query:queryString:options` will no longer be applied to filters so that
users can have full control over their custom filters.

*Impact:* You must ensure that any saved searches with a `query_string` filter aren't relying implicitly on
`query:queryString:options`.

[float]
==== Advanced setting query:queryString:options no longer applies `default_field: *` by default.
*Details:* Elasticsearch removed the ability to create indices with an _all field in 6.0. As a result, a user could end
up with a mix of indices with and without _all fields if they upgraded from an older version of ES. This could lead to
inconsistent highlighting in Discover. To work around this issue we added `default_field: *` to query:queryString:options
to force consistent querying across indices with and without _all. In 7.0 the _all field will be gone from all indices
so we no longer need this workaround.

*Impact:* Since we'll no longer send the `default_field` parameter in Kibana's query_string query, Elasticsearch
will use the index setting instead. The default for the index setting is also `*`, so most users should not be impacted.
If some of your indices have a non-default `default_field` setting, you may want to update it or re-add the parameter
to Kibana's advanced setting.

[float]
[[breaking_70_UI_changes]]
=== UI changes

[float]
==== Dark mode is now global
*Details:* Both the Dashboard and Maps applications offer "Dark Mode" options which have been removed in favor of a global dark mode advanced setting. This means that instead of having to turn on dark mode in many places, users can choose to turn on the `theme:darkMode` advanced setting and it will apply to all applications.

*Impact:* The dark mode setting for Dashboards and Maps will be ignored and the global setting will be used instead.


[float]
==== KQL is now the default query language in the global search bar
*Details:* Language enhancements that were introduced in 6.3 on an opt-in basis are now turned on by default. This
is considered a breaking change because the enhancements include a simplifed syntax that has some small incompatibilities
with the old Lucene syntax. 

*Impact:* Users simply need to familiarize themselves with the new syntax. Existing saved searches, visualizations, and dashboards
that use the old Lucene syntax will continue to work, but users should consider migrating them to KQL to enjoy the other benefits
that come along with it. For the time being, individual users can still opt-out of KQL under the options menu in the query bar
and admins can still change the global default using the `search:queryLanguage` advanced setting.




[float]
==== Removed support for deeply nested table splits in data table visualizations
*Details:* Previously a user was able to create multiple "split table" aggregations in one table on arbitrary levels.
The potential for deeply nested tables posed maintenance and accessibility challenges, and was inconsistent with other
visualizations that only allow one table split. This change does not limit the number of split rows a user can put into
a table; it only restricts the number of split tables to one.

*Impact:* To prevent breaking existing visualizations, saved objects containing nested table splits will be automatically
migrated to contain only one split table, converting any existing split tables beyond the first to split rows. No action
should be required as a result of this change, but be aware that users with saved data table visualizations that contain
multiple split tables will now see those tables rendered differently.

[float]
==== Imported Kibana dashboards might require small grid layout adjustments due to design changes
*Details:* Kibana 7.0 introduces a new default font for the application and also comes with several design changes in dashboards that slightly change padding and margin for dashboard panels. You may find you need to adjust grid layouts to compensate.

*Impact:* Minimal. In most cases, the dashboards should render as they did previously. In some cases, panels might overflow and require scroll bars where they did not previously. Simply adjust the panel sizes and edit your dashboard layouts if these bother you.

[float]
==== Timelion no longer appears in the side navigation
*Details:* Timelion sheets will continue to work in *Visualize*, but the 
Timelion application no longer appears by default in the {kib} side navigation. 

*Impact:* To create a Timelion visualization, go to *Visualize* and select 
*Timelion* from the visualization types. If you have a lot of existing Timelion 
visualizations and want to add Timelion back in the side
navigation, set `timelion.ui.enabled` to `true` in `kibana.yml`.



