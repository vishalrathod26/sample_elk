input {
     pipeline { address => "pcf-int-logs-filter-output-pipeline-flood"}
}
filter {
# Set Flood parameters
    mutate {
         add_field => { 
            "[labels][org]" => "flood"
            "[labels][space]" => "Flood"
            "[labels][environment]" => "sandbox"
            "index" => "logs-flood"
        }
    }

   #dissect {
   #   mapping => {
   #     "message" => "%{ts} [%{f1}] [%{f2}] %{msg}"
   #   }
   # }

    if [message] =~ /^\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2} / {
        dissect {
          mapping => {
            "message" => "%{ts} %{+ts} %{sev} [%{f3}] %{msg2}"
          }
        }
    } 
    if [msg2] and [msg2] =~ /^- \[\d+\] / {
        dissect {
          mapping => {
            "msg2" => "- [%{pid}] %{host} : %{msg3}"
          }
        }
    } 

    #if [ts] {
    #    date {
    #        match => [ "ts", "ISO8601" ]
    #    }
    #} 
    if [host]=="fcsoap.STATS" {
        dissect {
          mapping => {
            "msg3" => "[%{fcsoap_stats}] cf.space_name=%{[cf][space_name]}, cf.application_name=%{[cf][application_name]}, reqid=%{reqid}"
          }      
        }
        # "fcsoap_stats" => "|svr=|svc=FC:H1:SN|time=0.03|ver=2.4|req=STATUS_QUERY|res=S_IN_RESEARCH|user=MIG-252127|acct=MIG-252127|src=IS|ptl=|pdf=T|prod=|fcn=2004C23241|loan=|"
        kv {
            source => "fcsoap_stats"
            target => "fcsoap_stats"
            field_split => "|"
            value_split => "="
        }
        mutate {
            convert => {
                "[fcsoap_stats][time]" => "float"
            }
        }
    }
    if [msg3] {
        if [msg3]=~/^output=<RESPONSE_GROUP/  {
            dissect {
              mapping => {
                "msg3" => "%{}<RESPONSE_GROUP %{xml_string}</RESPONSE_GROUP>%{}"
              }      
            }
            mutate {
                replace => {
                    "xml_string" => "<RESPONSE_GROUP %{xml_string}</RESPONSE_GROUP>"
                }
            }           
        }
        else if [msg3]=~/^request pre-transform (.*?):<REQUEST_GROUP/ {
            dissect {
              mapping => {
                "msg3" => "%{}<REQUEST_GROUP %{xml_string}</REQUEST_GROUP>%{}"
              }      
            }           
            mutate {
                replace => {
                    "xml_string" => "<REQUEST_GROUP %{xml_string}</REQUEST_GROUP>"
                }
            }
        }
        if [xml_string] {
              xml {
                source => "xml_string"
                target => "xml"
                force_array => false
                force_content => true
              }
        }
    }
    # remove tmp variables
    mutate {
        remove_field => ["msg","msg2","msg3","ts","ts1"]
        rename =>  {
            "f1" => "source_type"
            "f2" => "reqid"
            "f3" => "swb_mfa"
            "host" => "[host][name]"
        }
    }
}

output
{
       stdout {codec=>rubydebug}
       elasticsearch {
        hosts => ["http://elasticsearch:9200"]
        index => "%{[index]}-%{+YYYY.MM.dd}"
       }
   
}
